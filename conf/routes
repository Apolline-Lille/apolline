# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#Swagger
GET         /swagger                                  controllers.Application.swagger
GET         /api-docs.json                            controllers.ApiHelpController.getResources
GET         /api-docs.json/user                       controllers.ApiHelpController.getResource(path = "/user")
GET         /api-docs.json/typeSensor                 controllers.ApiHelpController.getResource(path = "/typeSensor")
GET         /api-docs.json/sensors                    controllers.ApiHelpController.getResource(path = "/sensors")

#Dashboard page
GET         /                                         controllers.Dashboard.index

#User page
GET         /login                                    controllers.UserManager.loginPage
POST        /login                                    controllers.UserManager.loginSubmit
GET         /disconnect                               controllers.UserManager.disconnect
GET         /register                                 controllers.UserManager.addUserPage
POST        /register                                 controllers.UserManager.addUserSubmit

#Sensor page
GET         /inventary/sensors                        controllers.TypeSensorManager.inventary(sort:String ?= "")
GET         /inventary/sensors/type                   controllers.TypeSensorManager.typePage
POST        /inventary/sensors/type                   controllers.TypeSensorManager.typeInsert
GET         /inventary/sensors/:id                    controllers.SensorManager.inventary(id:String)
GET         /inventary/sensors/:id/update             controllers.TypeSensorManager.typeUpdatePage(id:String)
POST        /inventary/sensors/:id/update             controllers.TypeSensorManager.typeUpdate(id:String)
GET         /inventary/sensors/:id/delete             controllers.TypeSensorManager.delete(id:String)
GET         /inventary/sensors/:id/sensor             controllers.SensorManager.sensorPage(id:String)
POST        /inventary/sensors/:id/sensor             controllers.SensorManager.sensorInsert(id:String)
GET         /inventary/sensors/:id/:id2               controllers.SensorManager.sensorUpdatePage(id:String,id2:String)
POST        /inventary/sensors/:id/:id2               controllers.SensorManager.sensorUpdate(id:String,id2:String)
GET         /inventary/sensors/:id/:id2/delete        controllers.SensorManager.delete(id:String,id2:String)
GET         /inventary/sensors/:id/:id2/clone         controllers.SensorManager.sensorClonePage(id:String,id2:String)

#Module page
GET         /inventary/modules                          controllers.TypeModuleManager.inventary(sort:String ?= "")
GET         /inventary/modules/type                   controllers.TypeModuleManager.typePage

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                             controllers.Assets.at(path="/public", file)

GET         /*path                                    controllers.Dashboard.notFound(path)
